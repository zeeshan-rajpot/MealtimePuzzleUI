import { createApi, fetchBaseQuery } from "@reduxjs/toolkit/query/react";
import { baseUrl } from "../config"; // Import base API URL from configuration

// Define the profileApi slice
export const profileApi = createApi({
  reducerPath: "profileApi", // Unique key for this API slice
  baseQuery: fetchBaseQuery({
    baseUrl, // Base URL for API requests
    prepareHeaders: (headers) => {
      const token = localStorage.getItem("token"); // Retrieve token from local storage
      if (token) {
        headers.set("authorization", `Bearer ${token}`); // Set token in authorization header if available
      }
      return headers;
    },
  }),

  endpoints: (builder) => ({
    // Query to fetch the user's profile details
    getUserProfile: builder.query({
      query: () => "/user-details", // Endpoint to get user profile details
    }),

    // Mutation to update the user's profile data
    updateUserProfile: builder.mutation({
      query: (profileData) => ({
        url: "/update-profile",
        method: "POST",
        body: profileData, // Pass updated profile data in the request body
      }),
    }),
  }),
});

// Export hooks for each endpoint, auto-generated by RTK Query
export const { useGetUserProfileQuery, useUpdateUserProfileMutation } = profileApi;
